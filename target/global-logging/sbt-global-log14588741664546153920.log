[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\a.szczepanik\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\a.szczepanik\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 11.0.14.1)
[debug]       Load.loadUnit: plugins took 243.0716ms
[debug]       Load.loadUnit: defsScala took 0.6236ms
[debug] [Loading] Scanning directory C:\Users\a.szczepanik\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\a.szczepanik\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.5785 ms
[debug]           Load.resolveProject(global-plugins) took 95.3438ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\a.szczepanik\.sbt\1.0\plugins, plugins: List(<none>))) took 170.217ms
[debug] [Loading] Done in C:\Users\a.szczepanik\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 216.0334ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6229ms
[debug]     Load.loadUnit(file:/C:/Users/a.szczepanik/.sbt/1.0/plugins/, ...) took 476.024ms
[debug]   Load.apply: load took 742.4644ms
[debug]   Load.apply: resolveProjects took 8.0133ms
[debug]   Load.apply: finalTransforms took 110.4329ms
[debug]   Load.apply: config.delegates took 17.1187ms
[debug]   Load.apply: Def.make(settings)... took 886.1617ms
[debug]   Load.apply: structureIndex took 198.3664ms
[debug]   Load.apply: mkStreams took 3.4245ms
[info] loading global plugins from C:\Users\a.szczepanik\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5596.7724ms
[debug]           Load.loadUnit: plugins took 66.8598ms
[debug]           Load.loadUnit: defsScala took 0.0095ms
[debug] [Loading] Scanning directory C:\Users\a.szczepanik\Projekty\calculator\project
[debug]             Load.loadUnit: mkEval took 15.2536ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\a.szczepanik\Projekty\calculator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.6535 ms
[info] loading settings for project calculator-build from idea.sbt ...
[debug]               Load.resolveProject(calculator-build) took 14.0746ms
[debug]             Load.loadTransitive: finalizeProject(Project(id calculator-build, base: C:\Users\a.szczepanik\Projekty\calculator\project, plugins: List(<none>))) took 24.4357ms
[debug] [Loading] Done in C:\Users\a.szczepanik\Projekty\calculator\project, returning: (calculator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4336.5809ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.224ms
[debug]         Load.loadUnit(file:/C:/Users/a.szczepanik/Projekty/calculator/project/, ...) took 4415.9522ms
[debug]       Load.apply: load took 4420.8397ms
[debug]       Load.apply: resolveProjects took 0.1922ms
[debug]       Load.apply: finalTransforms took 33.5688ms
[debug]       Load.apply: config.delegates took 0.6653ms
[debug]       Load.apply: Def.make(settings)... took 198.2426ms
[debug]       Load.apply: structureIndex took 49.9772ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\a.szczepanik\Projekty\calculator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9478.5767ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\a.szczepanik\Projekty\calculator
[debug]       Load.loadUnit: mkEval took 0.5352ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.9402 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 71.4376ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\a.szczepanik\Projekty\calculator, plugins: List(<none>))) took 82.059ms
[debug] [Loading] Done in C:\Users\a.szczepanik\Projekty\calculator, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2761.5464ms
[debug]     Load.loadUnit: cleanEvalClasses took 35.2111ms
[debug]   Load.loadUnit(file:/C:/Users/a.szczepanik/Projekty/calculator/, ...) took 12276.8214ms
[debug] Load.apply: load took 12280.6459ms
[debug] Load.apply: resolveProjects took 0.2212ms
[debug] Load.apply: finalTransforms took 62.9455ms
[debug] Load.apply: config.delegates took 0.8884ms
[debug] Load.apply: Def.make(settings)... took 146.251ms
[debug] Load.apply: structureIndex took 46.747ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to day22calcagain (in build file:/C:/Users/a.szczepanik/Projekty/calculator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62179 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62179, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to day22calcagain (in build file:/C:/Users/a.szczepanik/Projekty/calculator/)
[debug] > Exec(idea-shell, None, None)
